import Grove.Framework

/-
This file is autogenerated by grove. You can manually edit it, for example to resolve merge
conflicts, but be careful.
-/

open Grove.Framework Widget

namespace TestProject.Grove.Generated.«list-array-operations»

def «22ed4b1e-3ee6-484f-a948-56430d51fbeb» : AssociationTable.Fact .subexpression where
  widgetId := "list-array-operations"
  factId := "22ed4b1e-3ee6-484f-a948-56430d51fbeb"
  rowId := "22ed4b1e-3ee6-484f-a948-56430d51fbeb"
  rowState := #[⟨"List", "List.leftpadTR", Grove.Framework.Subexpression.State.declaration
  (Grove.Framework.Declaration.def
    { name := `List.leftpadTR,
      renderedStatement := "List.leftpadTR.{u} {α : Type u} (n : Nat) (a : α) (l : List α) : List α",
      isDeprecated := false })⟩,⟨"Array", "Array.mkArray6", Grove.Framework.Subexpression.State.declaration
  (Grove.Framework.Declaration.def
    { name := `Array.mkArray6,
      renderedStatement := "Array.mkArray6.{u} {α : Type u} (a₁ a₂ a₃ a₄ a₅ a₆ : α) : Array α",
      isDeprecated := false })⟩,]
  metadata := {
    status := .done
    comment := "Blub"
  }

def table : AssociationTable.Data .subexpression where
  widgetId := "list-array-operations"
  rows := #[
    ⟨"22ed4b1e-3ee6-484f-a948-56430d51fbeb", "isEmpty", #[⟨"List", "List.isEmpty"⟩,⟨"Array", "Array.isEmpty"⟩,]⟩,
    ⟨"f31e9b71-4ac3-4bb4-8385-198fb1174c81", "filter", #[⟨"List", "List.filter"⟩,⟨"Array", "Array.filter"⟩,]⟩,
    ⟨"805094ea-a106-4230-abba-a67f2d507669", "cartesian", #[⟨"List", "TestProject.List.cartesian"⟩,]⟩,
    ⟨"1f04bde9-477c-46cb-a08a-34e35a3be931", "cons", #[⟨"List", "List.cons"⟩,]⟩,
    ⟨"e9ebb6fa-fd9c-4e99-87c5-184deb7bc2df", "GetElem", #[⟨"List", "app (GetElem.getElem) (List*)"⟩,⟨"Array", "app (GetElem.getElem) (Array*)"⟩,]⟩,
  ]
  facts := #[
    «22ed4b1e-3ee6-484f-a948-56430d51fbeb»,
  ]

def restoreState : RestoreStateM Unit := do
  addAssociationTable table