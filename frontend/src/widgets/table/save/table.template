import Grove.Framework

/-
This file is autogenerated by grove. You can manually edit it, for example to resolve merge
conflicts, but be careful.
-/

open Grove.Framework Widget

namespace {{metadata/projectNamespace}}.Generated.«{{definition/widgetId}}»

{{#*inline "leanState"}}
⟨{{leanString value}}, {{{stateRepr}}}⟩
{{/inline}}

{{#*inline "optstate"}}
{{#if (isNone this)}}none{{/if}}
{{#if (isSome this)}}some {{#with some}}{{> leanState}}{{/with}}{{/if}}
{{/inline}}

{{#each facts}}
def «{{factId}}» : Table.Fact {{dataKind ../definition/rowKind}} {{dataKind ../definition/columnKind}} {{dataKind ../definition/cellKind}} where
  widgetId := {{leanString ../definition/widgetId}}
  factId := {{leanString factId}}
{{#with identifier}}
  rowAssociationId := {{leanString rowAssociationId}}
  columnAssociationId := {{leanString columnAssociationId}}
  selectedLayers := #[{{#each selectedLayers}}{{leanString this}}, {{/each}}]
{{/with}}
{{#with state}}
  layerStates := #[
{{#each layerStates}}
    {
      layerIdentifier := {{leanString layerIdentifier}}
      rowState := {{#with rowState}}
        {{> optstate}}
{{/with}}
      columnState := {{#with columnState}}
        {{> optstate}}
{{/with}}
      selectedCellStates := #[
{{#each selectedCellStates}}
        {{> leanState}},
{{/each}}
      ]
    },
{{/each}}
  ]
{{/with}}
  metadata := {{#with metadata}}{{> metadata }}{{/with}}
{{/each}}

def table : Table.Data {{dataKind definition/rowKind}} {{dataKind definition/columnKind}} {{dataKind definition/cellKind}} where
  widgetId := {{leanString definition/widgetId}}
{{#with state}}
  selectedRowAssociations := #[{{#each selectedRowAssociations}}{{leanString this}}, {{/each}}]
  selectedColumnAssociations := #[{{#each selectedColumnAssociations}}{{leanString this}}, {{/each}}]
  selectedLayers := #[{{#each selectedLayers}}{{leanString this}}, {{/each}}]
  selectedCellOptions := #[
{{#each selectedCellOptions}}
    {
      rowValue := {{leanString rowValue}}
      columnValue := {{leanString columnValue}}
      selectedCellOptions := #[{{#each selectedCellOptions}}{{leanString this}}, {{/each}}]
    },
{{/each}}
  ]
{{/with}}
  facts := #[
{{#each facts}}
    «{{factId}}»,
{{/each}}
  ]

def restoreState : RestoreStateM Unit := do
  addTable table